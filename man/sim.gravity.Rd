% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{sim.gravity}
\alias{sim.gravity}
\title{Simulate connectivity values using gravity model}
\usage{
sim.gravity(N, D, theta = 1, omega.1 = 1, omega.2 = 1, gamma = 1,
  counts = FALSE)
}
\arguments{
\item{N}{vector of population sizes}

\item{D}{matrix of distances among all \eqn{ij} pairs}

\item{theta}{scalar giving the proportionality constant of gravity formula (default = 1)}

\item{omega.1}{scalar giving exponential scaling of origin population size (default = 1)}

\item{omega.2}{scalar giving exponential scaling of destination population size (default = 1)}

\item{gamma}{scalar giving the dispersal kernel paramater (default = 1)}
}
\value{
a matrix with values between 0 and 1 (if \code{counts = FALSE}) or positive integers (if \code{counts = TRUE})
}
\description{
This function uses the gravity model formula to simulate a connectivity matrix based on the supplied model parameters. The 
gravity model formula uses a Gamma distribution as the dispersal kernel in the denominator. A null model (where all model parameters = 1) can be
simulated by supplying only population sizes (\code{N}) and pairwise distances (\code{D}).
\deqn{\theta * ( N_i^\omega_1 N_j^\omega_2 / f(d_ij) )}
}
\examples{
B <- load.obj(2, './output/gravity_model_basic_route_full4.Rdata')

# Simulate connectivity matrix given fitted gravity model parameters
pi.hat <- sim.gravity(N=N,
                      D=D,
                      theta=B['theta', 'Mean'],
                      omega.1=B['omega.1', 'Mean'],
                      omega.2=B['omega.2', 'Mean'],
                      s=B['s', 'Mean'],
                      r=B['r', 'Mean'])

# Simulate null model connectivity matrix
pi.hat <- sim.gravity(N=N, D=D)

# Simulate trip counts based on fitted model parameters
M.hat <- sim.gravity(N=N,
                     D=D,
                     theta=B['theta', 'Mean'],
                     omega.1=B['omega.1', 'Mean'],
                     omega.2=B['omega.2', 'Mean'],
                     s=B['s', 'Mean'],
                     r=B['r', 'Mean'],
                     counts=TRUE)
}
\seealso{
Other simulation: \code{\link{calc.hpd}},
  \code{\link{calc.prop.inf}},
  \code{\link{calc.prop.remain}},
  \code{\link{calc.timing.magnitude}},
  \code{\link{calc.wait.time}}, \code{\link{decay.func}},
  \code{\link{get.age.beta}},
  \code{\link{get.beta.params}},
  \code{\link{sim.TSIR.full}}, \code{\link{sim.TSIR}},
  \code{\link{sim.combine.dual}},
  \code{\link{sim.combine}},
  \code{\link{sim.gravity.duration}},
  \code{\link{sim.lambda}}, \code{\link{sim.pi}},
  \code{\link{sim.rho}}, \code{\link{sim.tau}}
}
\author{
John Giles
}
\concept{simulation}
