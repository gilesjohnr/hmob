% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmob_funcs.R
\name{calc.prop.tot.trips}
\alias{calc.prop.tot.trips}
\title{Calculate the cumulative proportion of trips for values of a given variable}
\usage{
calc.prop.tot.trips(
  variable,
  counts,
  type,
  vals,
  parallel = FALSE,
  n.cores = 2
)
}
\arguments{
\item{variable}{a vector of variable values for which to calculate the proportion of total trips (e.g. 'duration' or 'distance')}

\item{counts}{a vector of observed counts of each value}

\item{vals}{vector giving numeric values of the variable at which to calculate the proportion of total trips}

\item{parallel}{run in parallel (when the \code{vals} vector is long), default=FALSE}

\item{n.cores}{number of cores to use in parallel}
}
\value{
a two-column dataframe
}
\description{
This function takes a longform dataframe of trip counts and calculates the cumulative proportion of the total number of observed trips for each of 
the values provided in the \code{vals} vector.
}
\examples{
# Longform trip lengths with all metadata attached
d <- read.csv("./data/trip_durations_longform_metadata_13_34_42_85_10_14_16_99_urban_rural.csv", stringsAsFactors=F)

# Proportion of total trips with a duration less than the given values
calc.prop.tot.trips(variable=d$duration, 
                    count=d$count, 
                    vals=c(1,3,7), 
                    type='cumulative')

calc.prop.tot.trips(variable=d$duration, 
                    count=d$count, 
                    vals=c(1,3,7), 
                    type='interval')

# Proportion of total trips with a distance less than the given values in parallel
calc.prop.tot.trips(variable=d$distance, 
                    count=d$count, 
                    vals=c(1:100), 
                    type='cumulative',
                    parallel=TRUE,
                    n.cores=4)

calc.prop.tot.trips(variable=d$distance, 
                    count=d$count, 
                    vals=c(1:100), 
                    type='interval',
                    parallel=TRUE,
                    n.cores=4)
}
\seealso{
Other data synthesis: 
\code{\link{calc.route.type}()},
\code{\link{calc.samp.size}()},
\code{\link{get.crossdist}()},
\code{\link{get.distance.class}()},
\code{\link{get.distance.counts}()},
\code{\link{get.distance.matrix}()},
\code{\link{get.district.names.xy}()},
\code{\link{get.district.pop}()},
\code{\link{get.duration.counts}()},
\code{\link{get.holidays}()},
\code{\link{get.sparse.mob.matrix}()},
\code{\link{get.stay.data}()},
\code{\link{get.subsamp}()},
\code{\link{get.xy.counts}()},
\code{\link{mob.data.array}()},
\code{\link{parse.longform}()}
}
\author{
John Giles
}
\concept{data synthesis}
