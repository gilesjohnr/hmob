% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{get.duration.counts}
\alias{get.duration.counts}
\title{Get matrix of trip duration counts}
\usage{
get.duration.counts(a, b, t, d, type = "matrix", distID = districtIDs,
  n.cores = NULL)
}
\arguments{
\item{a}{origin district (can take integer ID or character name)}

\item{b}{destination district (can take integer ID or character name)}

\item{t}{character string indicating the temporal interval the count trip distances (e.g. 'month', 'week', 'doy')}

\item{d}{longform mobility data, expects \code{d.42} data object (trip_durations_longform_metadata_42.csv) or similar}

\item{type}{return a 'matrix' or a 'dataframe' with counts in longform, default = 'matrix'}

\item{distID}{district IDs and names, expects \code{districtIDs} data object (NamNames.csv), default = districtIDs}

\item{n.cores}{number cores to use when parallel computing (default = NULL, which uses half available cores)}
}
\value{
matrix or dataframe
}
\description{
The \code{get.duration.counts} function calculates a matrix or long-form dataframe of trip duration counts for a temporal 
interval \code{t} given an origin \code{a} and destination \code{b}. Only takes origin district because it uses distances across all destinations.
}
\examples{
data("d.42") # same as ./BeyondCommuting2/trip_lengths/trip_durations_longform_metadata_42.csv
data("districtIDs") # same as NamNames.csv
data("admin2")

orig <- 42 # "Windhoek East"
dest <- 16

# Longform dataframe 
df <- get.duration.counts(a=orig, b=dest, t='month', d=d.42, type='dataframe', n.cores=4)
head(df)

# Same data in matrix format
m <- get.duration.counts(a=orig,              # integer ID of origin district
                         b=dest,              # integer ID of destination district
                         t='month',           # temporal interval (e.g. 'month', 'week', 'doy')
                         d=d.42,              
                         type='matrix',       # return a matrix or long-form dataframe
                         distID=districtIDs,  
                         n.cores=NULL)        # number of cores to run parallel, if NULL, uses half
see(m)

par(mfrow=c(1,2))
trip.map(a=orig, b=dest)
plot3D::hist3D(x=1:nrow(m), y=1:30, z=m[,1:30],
              theta=130, phi=20, scale=F, expand=0.01,
              xlab='Month',
              ylab='Trip duration',
              zlab='Trip count',
              ticktype="detailed",
              space=0.1, lighting=T, light="diffuse", shade = 0.75)
title(get.names(orig, dest), outer=T, line=-3, cex=2)
}
\seealso{
Other data synthesis: \code{\link{calc.prop.route.type}},
  \code{\link{calc.prop.tot.trips}},
  \code{\link{calc.samp.size}},
  \code{\link{get.distance.class}},
  \code{\link{get.distance.counts}},
  \code{\link{get.district.names.xy}},
  \code{\link{get.district.pop}},
  \code{\link{get.holidays}}, \code{\link{get.subsamp}},
  \code{\link{get.xy.counts}},
  \code{\link{mob.data.array}},
  \code{\link{parse.longform}}
}
\author{
John Giles
}
\concept{data synthesis}
