% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{sim.TSIR.full}
\alias{sim.TSIR.full}
\title{Simulate full stochastic TSIR in parallel}
\usage{
sim.TSIR.full(N, D, B, R, lambda, prop.leave, prop.remain, beta, gamma,
  gen, I.0, N.sim1, N.sim2 = 100, max.t = 100, freq.dep = TRUE,
  parallel = FALSE, n.cores = NULL)
}
\arguments{
\item{N}{Vector giving the population size of each district}

\item{D}{Distance matrix}

\item{B}{Estimated parameters from basic gravity model}

\item{R}{Estimated parameters from gravity model with duration}

\item{lambda}{Estimated parameters from trip duration decay model (lambda), processed by the \code{\link{get.param.vals}} function}

\item{prop.leave}{Observed proportion individuals leaving origin at time t in trip duration data}

\item{prop.remain}{Observed proportion of individuals remaining in destination j}

\item{beta}{Transmission rate}

\item{gamma}{Recovery rate}

\item{I.0}{Vector giving number of infected individuals in each district at time 0}

\item{N.sim1}{Number of times to simulate matrices of model parameters (lambda, pi, tau, rho)}

\item{N.sim2}{Number of times to simulate epidemic outcomes under each realization of model parameters (lambda, pi, tau, rho; default = 100)}

\item{max.t}{Maximum number of epidemic generations}

\item{freq.dep}{Logical indicating frequency (\code{TRUE}) or density dependent (\code{FALSE}) transmission}

\item{parallel}{Logical indicating whether to initiate the cluster within \code{sim.TSIR.full} and register as \code{foreach} backend}

\item{n.cores}{Number of cores to use when running in parallel}

\item{gen.t}{Pathogen generation time (days)}

\item{max.t}{Maximum number of generations (default = 100)}
}
\value{
a list containing simulations using the basic gravity model and the gravity model with duration
}
\description{
This function simulates TSIR models using both the basic gravity model and the gravity model with duration for
each stochastic realization of the estimated model parameters (lambda, pi, rho, tau). The function runs the \code{N.sim1} level
simulations in parallel and the \code{N.sim2} level simulations sequentially.
}
\examples{
setwd("~/Dropbox/Projects/Mobility/SeasonalCommuting")

# Duration data for the purpose of subsetting districts
y.route <- load.obj(3, './data/duration_data_arrays_1day_full.Rdata')      # y.month, y.route
y.route <- get.subsamp(y.route, min.locations=30, min.samp=20)

D <- load.obj(1, './data/distance_matrix_named.rdata')                # distance.matrix
N <- load.obj(1, './data/N_pop.rdata')  
B <- load.obj(2, './output/gravity_model_basic_nogamma.Rdata')
R <- load.obj(2, './output/gravity_model_duration_multialpha_nogamma_meanbasic.Rdata')

load('./output/decay_1day_62dists_summary.Rdata')                   # mod.decay # Decay model parameters (Lambda) 
load('./output/prop_remain_6pathogens_62dists_subsamp100.Rdata')    # prop.remain # proportion individuals remaining for full generation for each pathogen generation
load('./data/prop_leave.rdata')                                     # prop.leave # observed proportion individuals leaving origin at time t in trip duration data  

districts.all <- dimnames(D)[[1]] # full set of district names
districts <- attributes(y.route)$dimnames$origin # subset of 62 districts
n.districts <- length(districts)

tmp <- districts.all \%in\% districts
D <- D[tmp, tmp]
N <- N[names(N) \%in\% districts]
prop.leave <- prop.leave[,dimnames(prop.leave)$origin \%in\% districts]
lambda <- get.param.vals(n.districts=n.districts, name='lambda', level='route', stats=mod.decay)

params <- list(
     influenza=data.frame(pathogen='influenza', beta=1.5, gamma=0.75, gen=3, yrs=0.6)
)

pathogen <- 'influenza'
intro.district <- 42

I.0 <- rep(0, n.districts)
I.0[which(districts == intro.district)] <- 1   # introduction  

t <- Sys.time()
sim <- sim.TSIR.full(
     N=N,                                                                  # Vector giving the population size of each district
     D=D,                                                                  # Distance matrix
     lambda=lambda,                                                        # Decay model parameters (Lambda)
     B=B,                                                                  # Gravity model with duration
     R=R,                                                                  # Basic gravity model
     prop.leave=prop.leave,                                                # observed proportion individuals leaving origin at time t in trip duration data 
     prop.remain=prop.remain[[which(names(prop.remain) == pathogen)]],     # bserved proportion of individuals remaining in destination j
     beta=params[[pathogen]]$beta,                                         # Transmission rate
     gamma=params[[pathogen]]$gamma,                                       # Recovery rate
     gen=params[[pathogen]]$gen,                                           # Pathogen generation time
     I.0=I.0,                                                              # Vector giving number of infected individuals in each district at time 0
     N.sim1=5,                                                             # Number of times to simulate matrices of model parameters (lambda, pi, tau, rho)
     N.sim2=5,                                                             # Number of times to simulate epidemic outcomes under each realization of model parameters
     max.t=ceiling((365*params[[pathogen]]$yrs)/params[[pathogen]]$gen),   # Maximum number of generations
     parallel=TRUE,
     n.cores=n.cores
)
Sys.time() - t

}
\seealso{
Other simulation: \code{\link{calc.hpd}},
  \code{\link{calc.prop.inf}},
  \code{\link{calc.prop.remain}},
  \code{\link{calc.timing.magnitude}},
  \code{\link{calc.wait.time}}, \code{\link{decay.func}},
  \code{\link{get.age.beta}},
  \code{\link{get.beta.params}}, \code{\link{sim.TSIR}},
  \code{\link{sim.combine.dual}},
  \code{\link{sim.combine}},
  \code{\link{sim.gravity.duration}},
  \code{\link{sim.gravity}}, \code{\link{sim.lambda}},
  \code{\link{sim.pi}}, \code{\link{sim.rho}},
  \code{\link{sim.tau}}
}
\author{
John Giles
}
\concept{simulation}
