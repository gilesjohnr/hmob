% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{mob.data.array}
\alias{mob.data.array}
\title{Build mobility data array}
\usage{
mob.data.array(orig, dest = NULL, time = NULL, count,
  variable = NULL, name, agg.int = 1)
}
\arguments{
\item{orig}{a vector of origin districts}

\item{dest}{a vector of destination districts}

\item{time}{a vector of the time of each observation (e.g. day, week, month, year). When \code{time = NULL} (default), function returns route-level matrix.}

\item{count}{a vector of total counts of each observation}

\item{variable}{a vector of covariate values with which to condition trip counts (e.g. distance or trip duration)}

\item{name}{a character string giving the name of the variable; expects either \code{'distance'}, \code{'duration'}, \code{'movement'}, or \code{'leave'}}

\item{agg.int}{an integer giving the interval by which to aggregate the given variable, default = 1 (not aggregated). When \code{variable} is trip duration, this is the length 
of generation time (in days). When \code{variable} is distance, this is the distance interval in km. Ignored when \code{name} is \code{'movement'} or \code{'leave'}.}
}
\value{
A 2-, 3-, or 4-dimensional array depending on input parameters. Cells in output array represent total trip counts.
}
\description{
This function builds data arrays of total trip counts from longform mobility data (such as that produced by the \code{parse.longform} function). 
If \code{time=NULL} (default), route-level counts are returned. If a vector of times (e.g. week or month) is provided, an additional dimension is added to 
the array. If a covariate is provided in \code{variable}, the function will return total trip counts that are aggregated according to this variable (e.g. trip distance or trip duration).
}
\examples{
# Subset of 5 high pop density and 7 low pop density
df <- read.csv("BeyondCommuting2/trip_lengths/trip_durations_longform_metadata_12_dists_hi_lo_dens.csv", stringsAsFactors=F)

# Simple route-level movement matrix
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    name='movement')
str(m)

# Week-level movement matrix
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    time=df$week,
                    count=df$count,
                    name='movement')
str(m)

# Route-level distance matrix
# Counts total trips that occur with distance intervals of width agg.int km
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    variable=df$distance,
                    name='distance') # no aggregation so trips represent counts per each 1 km
str(m)

m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    variable=df$distance,
                    agg.int=5, # count trips per 5km intervals
                    name='distance')
str(m)

# Month-level aggregated distance matrix
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    time=df$month,
                    variable=df$distance,
                    agg.int=5, # count trips per 5km intervals
                    name='distance')
str(m)

# Route-level duration matrix
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    variable=df$duration,
                    name='duration') # no aggregation so counts represent total trips for all durations in 1 day increments
str(m)

# Month-level aggregated duration matrix 
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    time=df$month,
                    count=df$count,
                    variable=df$duration,
                    agg.int=3, # aggregated to a generation time of 3 days
                    name='duration')
str(m)

# Total number trips leaving each origin across all times
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    count=df$count,
                    name='leave')
str(m)

# Total number trips leaving each origin on each day of the year
m <- mob.data.array(orig=df$from,
                    dest=df$to,
                    time=df$doy,
                    count=df$count,
                    name='leave')
str(m)
}
\seealso{
Other data synthesis: \code{\link{calc.prop.tot.trips}},
  \code{\link{calc.route.type}},
  \code{\link{calc.samp.size}},
  \code{\link{get.distance.class}},
  \code{\link{get.distance.counts}},
  \code{\link{get.district.names.xy}},
  \code{\link{get.district.pop}},
  \code{\link{get.duration.counts}},
  \code{\link{get.holidays}}, \code{\link{get.subsamp}},
  \code{\link{get.xy.counts}}, \code{\link{parse.longform}}
}
\author{
John Giles
}
\concept{data synthesis}
