% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{get.beta.params}
\alias{get.beta.params}
\title{Get parameters for Beta distribution}
\usage{
get.beta.params(mu = NULL, sigma = NULL, quantiles = NULL,
  probs = NULL)
}
\arguments{
\item{mu}{scalar giving the mean \eqn{\mu}}

\item{sigma}{scalar giving the variance \eqn{\sigma^2}}

\item{quantiles}{vector of quantiles for which proportions are observed. Expects: c('min', '25th', 'median', '75th', 'max').}

\item{probs}{vector of observed proportions}
}
\value{
A list containing the two shape parameters of the Beta distribution
}
\description{
This function finds the two shape parameters for the Beta distribution of a random variable between 0 and 1.
Note that the function expects EITHER the mean \eqn{\mu} and variance \eqn{\sigma^2} OR \code{quantiles} 
and \code{probs} as arguments. The arguments are structured this way because when the mean and variance are given, the solution is found analytically. When proportions 
(or probabilities) at each quantile are given, the solution is found numerically by minimizing the Sum of the Squared Errors (SSE) using the Nelder-Mead 
optimization algorithm. Note that the fitting algorithm performs best when the five standard quantiles are supplied (Min, 25th, Median, 75th, Max).
}
\examples{
# analytic solution
mu <- 0.6
sigma <- 0.005
prm <- get.beta.params(mu=mu, sigma=sigma) 
curve(dbeta(x, prm$shape1, prm$shape2), 0, 1, lwd=2, xlab="Random variable", ylab='Probability density')
abline(v=mu, col='blue')
abline(v=c(mu-sqrt(sigma), mu+sqrt(sigma)), col='blue', lty=2)


# numeric solution
quantiles <- c(0.001, 0.25, 0.5, 0.75, 0.999)
probs1 <- c(0.26, 0.57, 0.73, 0.81, 0.95) # WHO region AFR, <12mos, n=16
probs2 <- c(0.86, 0.86, 0.88, 0.92, 0.94) # WHO region AFR, >12mos, n=4

v <- rbind(probs1, probs2)
dimnames(v) <- list(Age=c('< 12mos', '> 12mos'), 
                    Quantiles=c('min', '25th', 'median', '75th', 'max'))

par(mfrow=c(1,2))
prm <- get.beta.params(quantiles=quantiles, probs=probs1)
curve(dbeta(x, prm$shape1, prm$shape2), 0, 1, lwd=2, xlab="Vaccine effectiveness", ylab='Probability density')
abline(v=probs1, col='blue', lty=2)
mtext(c('min', '25th', 'median', '75th', 'max'), 3, at=probs1, line=0.5, col='blue', cex=0.75)
mtext('<12mos', 3, at=0.05, line=-1.5)

prm <- get.beta.params(quantiles=quantiles, probs=probs2)
curve(dbeta(x, prm$shape1, prm$shape2), 0, 1, lwd=2, xlab="Vaccine effectiveness", ylab='Probability density')
abline(v=probs2, col='blue', lty=2)
mtext('>12mos', 3, at=0.05, line=-1.5)
}
\seealso{
Other simulation: \code{\link{calc.hpd}},
  \code{\link{calc.prop.inf}},
  \code{\link{calc.prop.remain}},
  \code{\link{calc.timing.magnitude}},
  \code{\link{calc.wait.time}}, \code{\link{decay.func}},
  \code{\link{sim.TSIR.full}}, \code{\link{sim.TSIR}},
  \code{\link{sim.combine.dual}},
  \code{\link{sim.combine}},
  \code{\link{sim.gravity.duration}},
  \code{\link{sim.gravity}}, \code{\link{sim.lambda}},
  \code{\link{sim.pi}}, \code{\link{sim.rho}},
  \code{\link{sim.tau}}
}
\author{
John Giles
}
\concept{simulation}
