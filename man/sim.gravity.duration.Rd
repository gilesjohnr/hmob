% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmobfuncs.R
\name{sim.gravity.duration}
\alias{sim.gravity.duration}
\title{Simulate connectivity values using gravity model with trip duration}
\usage{
sim.gravity.duration(
  N,
  D,
  theta = 1,
  omega.1 = 1,
  omega.2 = 1,
  gamma = 1,
  lambda,
  alpha = 1,
  counts = FALSE
)
}
\arguments{
\item{N}{vector of population sizes}

\item{D}{matrix of distances among all \eqn{ij} pairs}

\item{theta}{scalar giving the proportionality constant of gravity formula (default = 1)}

\item{omega.1}{scalar giving exponential scaling of origin population size (default = 1)}

\item{omega.2}{scalar giving exponential scaling of destination population size (default = 1)}

\item{gamma}{scalar giving the dispersal kernel paramater (default = 1)}

\item{lambda}{matrix of trip duration decay parameters for each \eqn{ij} route}

\item{alpha}{model fitting parameter for the ECDF of lambda (default = 1)}

\item{counts}{logical indicating whether or not to return a count variable by scaling the connectivity matrix by origin population size (\eqn{N_i}) (default = FALSE)}
}
\value{
a matrix with values between 0 and 1 (if \code{counts = FALSE}) or positive integers (if \code{counts = TRUE})
}
\description{
This function simulates a connectivity matrix supplied model parameters in a gravitym odel formula that incorporates trip duration by using a conditional dispersal kernel (\eqn{f(d_ij | \lambda_ij)}) in 
the denominator. The gravity model still uses a Gamma distribution as the dispersal kernel, but this is scaled by the probability \eqn{Pr(\lambda_ij | d_ij)} according to Bayes theorem. If a 
vector of shape (\code{s}) and rate (\code{r}) parameters is supplied, the function will simulate route specific dispersal kernels based on the origin location (\eqn{i}). A null model (where all model parameters = 1) 
can be simulated by supplying only population sizes (\code{N}) and pairwise distances (\code{D}).
\deqn{
    \theta * ( N_i^\omega_1 N_j^\omega_2 / f(d_ij | \lambda_ij) )
}
}
\examples{

}
\seealso{
Other simulation: 
\code{\link{calc.hpd}()},
\code{\link{calc.prop.inf}()},
\code{\link{calc.prop.remain}()},
\code{\link{calc.timing.magnitude}()},
\code{\link{calc.wait.time}()},
\code{\link{decay.func}()},
\code{\link{get.age.beta}()},
\code{\link{get.beta.params}()},
\code{\link{sim.TSIR.full}()},
\code{\link{sim.TSIR}()},
\code{\link{sim.combine.dual}()},
\code{\link{sim.combine}()},
\code{\link{sim.gravity}()},
\code{\link{sim.lambda}()},
\code{\link{sim.pi}()},
\code{\link{sim.rho}()},
\code{\link{sim.tau}()}

Other gravity: 
\code{\link{fit.gravity}()},
\code{\link{sim.gravity}()}
}
\author{
John Giles
}
\concept{gravity}
\concept{simulation}
